name: "Windows Build Action"
description: "Build Conflux for Windows platform"

inputs:
  commit_sha:
    description: "The commit hash of conflux-rust to build"
    required: true
  version_tag:
    description: "The version tag for the release"
    required: true
  arch:
    description: "CPU Architecture"
    required: true
  
  static_openssl:
    description: "Whether to statically link OpenSSL"
    required: true
  compatibility_mode:
    description: "Whether to enable compatibility mode"
    required: true
    
outputs:
  build_path:
    description: "Path to the build artifacts"
    value: ${{ steps.package.outputs.build_path }}

runs:
  using: "composite"
  steps:
    - name: Install windows dependencies
      shell: bash
      run: |
        # conflux-rust need cmake 3(windows-2022 already install cmake3)
        # choco install cmake.install --version=3.31.8
        # dynamic link openssl (add VCPKGRS_TRIPLET = "x64-windows" and VCPKGRS_DYNAMIC = "1" to use dynamic link openssl)
        # vcpkg install openssl:x64-windows
        choco install llvm -y
        vcpkg install openssl:x64-windows-static-md
    - name: Install Rust toolchain
      shell: bash
      working-directory: conflux-rust
      run: |
        rustup show
        rustup target add ${{ inputs.arch }}-pc-windows-msvc
        rustup component add rustfmt rust-src

    - name: Build Project
      shell: bash
      working-directory: conflux-rust
      run: |
        echo "--- Building Conflux for Windows ---"
        cargo build --release --target=${{ inputs.arch }}-pc-windows-msvc

    - name: Set build path output
      id: package
      shell: bash
      run: |
        BUILD_PATH="conflux-rust/target/${{ inputs.arch }}-pc-windows-msvc/release"
        echo "build_path=$BUILD_PATH" >> $GITHUB_OUTPUT
