name: _Reusable Build and Release

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      arch:
        required: true
        type: string
      runner:
        required: true
        type: string
      commit_sha:
        required: true
        type: string
      version_tag:
        required: true
        type: string
      glibc_version:
        required: false
        type: string
        default: "2.39"
      openssl_version:
        required: false
        type: string
        default: "openssl-3"
      static_openssl:
        required: false
        type: boolean
        default: true
      compatibility_mode:
        required: false
        type: boolean
        default: false

jobs:
  build-and-release:
    runs-on: ${{ inputs.runner }}
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout Builder Repo
        uses: actions/checkout@v4
        with:
          path: builder

      - name: Checkout conflux-rust
        uses: actions/checkout@v4
        with:
          repository: "Conflux-Chain/conflux-rust"
          ref: ${{ inputs.commit_sha }}
          path: conflux-rust

      - name: Build for Linux
        if: inputs.os == 'linux'
        id: linux_build
        uses: ./builder/.github/workflows/actions/linux
        with:
          commit_sha: ${{ inputs.commit_sha }}
          version_tag: ${{ inputs.version_tag }}
          arch: ${{ inputs.arch }}
          glibc_version: ${{ inputs.glibc_version }}
          openssl_version: ${{ inputs.openssl_version }}
          static_openssl: ${{ inputs.static_openssl }}
          compatibility_mode: ${{ inputs.compatibility_mode }}

      - name: Build for Windows
        if: inputs.os == 'windows'
        id: windows_build
        uses: ./builder/.github/workflows/actions/windows
        with:
          commit_sha: ${{ inputs.commit_sha }}
          version_tag: ${{ inputs.version_tag }}
          arch: ${{ inputs.arch }}

      - name: Build for macOS
        if: inputs.os == 'macos'
        id: macos_build
        uses: ./builder/.github/workflows/actions/macos
        with:
          commit_sha: ${{ inputs.commit_sha }}
          version_tag: ${{ inputs.version_tag }}
          arch: ${{ inputs.arch }}

      - name: Get Build Outputs
        id: build_outputs
        run: |
          if [ "${{ inputs.os }}" == "linux" ]; then
            echo "archive_path=${{ steps.linux_build.outputs.archive_path }}" >> $GITHUB_OUTPUT
            echo "artifact_base_name=${{ steps.linux_build.outputs.artifact_base_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.os }}" == "windows" ]; then
            echo "archive_path=${{ steps.windows_build.outputs.archive_path }}" >> $GITHUB_OUTPUT
            echo "artifact_base_name=${{ steps.windows_build.outputs.artifact_base_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.os }}" == "macos" ]; then
            echo "archive_path=${{ steps.macos_build.outputs.archive_path }}" >> $GITHUB_OUTPUT
            echo "artifact_base_name=${{ steps.macos_build.outputs.artifact_base_name }}" >> $GITHUB_OUTPUT
          fi
      - name: Attest Build Provenance
        id: attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ steps.build_outputs.outputs.archive_path }}

      - name: Rename Attestation
        id: rename_attestation
        shell: bash
        run: |
          NEW_ATTESTATION_NAME="${{ steps.build_outputs.outputs.artifact_base_name }}-attestation.json"
          mv "${{ steps.attest.outputs.bundle-path }}" "${NEW_ATTESTATION_NAME}"

          echo "new_bundle_path=${NEW_ATTESTATION_NAME}" >> $GITHUB_OUTPUT
          echo "Renamed attestation to: ${NEW_ATTESTATION_NAME}"

      - name: Get Short Commit Hash
        id: get_hash
        run: echo "short_hash=$(echo ${{ inputs.commit_sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Create or Update Release and Upload Assets
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: ${{ inputs.version_tag }}-${{ steps.get_hash.outputs.short_hash }}
          name: Release ${{ inputs.version_tag }} (commit ${{ steps.get_hash.outputs.short_hash }})
          body: |
            ---
            ### Build for `${{ inputs.os }}-${{ inputs.arch }}`

            **Build Details:**
            - **Commit:** `${{ inputs.commit_sha }}`
            - **Version:** `${{ inputs.version_tag }}`
            - **Platform:** `${{ inputs.os }}-${{ inputs.arch }}`
            - **Workflow Run:** [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          files: |
            ${{ steps.build_outputs.outputs.archive_path }}
            ${{ steps.rename_attestation.outputs.new_bundle_path }}
          append_body: true