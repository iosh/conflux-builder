name: Conflux Builder

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: "The commit sha of conflux-rust to build"
        required: true
      version_tag:
        description: "The version tag for the release (e.g., v3.0.0)"
        required: true
      os:
        description: "Operating System"
        required: true
        type: choice
        options:
          - linux
          - windows
          - macos
      arch:
        description: "CPU Architecture"
        required: true
        type: choice
        options:
          - x86_64
          - aarch64
      glibc_version:
        description: "Glibc version for Linux builds (e.g., 2.31)"
        required: false
        type: choice
        options:
          - "2.27"
          - "2.31"
          - "2.35"
          - "2.39"
        default: "2.39"

      openssl_version:
        description: "OpenSSL version for Linux builds"
        required: false
        type: choice
        options:
          - openssl-3
          - openssl-1
        default: "openssl-3"
      static_openssl:
        description: "Statically link OpenSSL (for Linux builds)"
        required: true
        type: boolean
        default: true
      compatibility_mode:
        description: "Enable compatibility mode for older CPUs (disables native optimizations)"
        required: true
        type: boolean
        default: false

jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      config: ${{ steps.generate_config.outputs.config }}
    steps:
      - name: Generate Build Config
        id: generate_config
        run: |
          ALL_CONFIGS='[
            {"os": "linux",   "arch": "x86_64",  "runs-on": "ubuntu-24.04"},
            {"os": "linux",   "arch": "aarch64", "runs-on": "ubuntu-24.04"},
            {"os": "macos",   "arch": "x86_64",  "runs-on": "macos-13"},
            {"os": "macos",   "arch": "aarch64", "runs-on": "macos-14"},
            {"os": "windows", "arch": "x86_64",  "runs-on": "windows-2022"}
          ]'
          MATCHING_CONFIG="[$(echo "$ALL_CONFIGS" | jq -c ".[] | select(.os == \"${{ inputs.os }}\" and .arch == \"${{ inputs.arch }}\")")]"
          echo "config=$MATCHING_CONFIG" >> $GITHUB_OUTPUT

  build-and-release:
    needs: setup
    if: ${{ needs.setup.outputs.config != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.setup.outputs.config) }}
    runs-on: ${{ matrix.config.runs-on }}
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout Builder Repo
        uses: actions/checkout@v4
        with:
          path: builder

      - name: Checkout conflux-rust
        uses: actions/checkout@v4
        with:
          repository: "Conflux-Chain/conflux-rust"
          ref: ${{ inputs.commit_sha }}
          path: conflux-rust

      - name: Build for Linux
        if: matrix.config.os == 'linux'
        id: linux_build
        uses: ./builder/.github/workflows/actions/linux
        with:
          commit_sha: ${{ inputs.commit_sha }}
          version_tag: ${{ inputs.version_tag }}
          arch: ${{ matrix.config.arch }}
          glibc_version: ${{ inputs.glibc_version }}
          openssl_version: ${{ inputs.openssl_version }}
          static_openssl: ${{ inputs.static_openssl }}
          compatibility_mode: ${{ inputs.compatibility_mode }}

      - name: Build for Windows
        if: matrix.config.os == 'windows'
        id: windows_build
        uses: ./builder/.github/workflows/actions/windows
        with:
          commit_sha: ${{ inputs.commit_sha }}
          version_tag: ${{ inputs.version_tag }}
          arch: ${{ matrix.config.arch }}

      - name: Build for macOS
        if: matrix.config.os == 'macos'
        id: macos_build
        uses: ./builder/.github/workflows/actions/macos
        with:
          commit_sha: ${{ inputs.commit_sha }}
          version_tag: ${{ inputs.version_tag }}
          arch: ${{ matrix.config.arch }}
      - name: Get Build Outputs
        id: build_outputs
        run: |
          if [ "${{ matrix.config.os }}" == "linux" ]; then
            echo "archive_path=${{ steps.linux_build.outputs.archive_path }}" >> $GITHUB_OUTPUT
            echo "artifact_base_name=${{ steps.linux_build.outputs.artifact_base_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.config.os }}" == "windows" ]; then
            echo "archive_path=${{ steps.windows_build.outputs.archive_path }}" >> $GITHUB_OUTPUT
            echo "artifact_base_name=${{ steps.windows_build.outputs.artifact_base_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.config.os }}" == "macos" ]; then
            echo "archive_path=${{ steps.macos_build.outputs.archive_path }}" >> $GITHUB_OUTPUT
            echo "artifact_base_name=${{ steps.macos_build.outputs.artifact_base_name }}" >> $GITHUB_OUTPUT
          fi
      - name: Attest Build Provenance
        id: attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ steps.build_outputs.outputs.archive_path }}

      - name: Rename Attestation
        id: rename_attestation
        shell: bash
        run: |
          NEW_ATTESTATION_NAME="${{ steps.build_outputs.outputs.artifact_base_name }}-attestation.json"
          mv "${{ steps.attest.outputs.bundle-path }}" "${NEW_ATTESTATION_NAME}"

          echo "new_bundle_path=${NEW_ATTESTATION_NAME}" >> $GITHUB_OUTPUT
          echo "Renamed attestation to: ${NEW_ATTESTATION_NAME}"

      - name: Get Short Commit Hash
        id: get_hash
        run: echo "short_hash=$(echo ${{ inputs.commit_sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Create or Update Release and Upload Assets
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: ${{ inputs.version_tag }}-${{ steps.get_hash.outputs.short_hash }}
          name: Release ${{ inputs.version_tag }} (commit ${{ steps.get_hash.outputs.short_hash }})
          body: |
            ---
            ### Build for `${{ matrix.config.os }}-${{ matrix.config.arch }}`

            **Build Details:**
            - **Commit:** `${{ inputs.commit_sha }}`
            - **Version:** `${{ inputs.version_tag }}`
            - **Platform:** `${{ matrix.config.os }}-${{ matrix.config.arch }}`
            - **Workflow Run:** [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          files: |
            ${{ steps.build_outputs.outputs.archive_path }}
            ${{ steps.rename_attestation.outputs.new_bundle_path }}
          append_body: true
